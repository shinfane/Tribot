
#define THRESHOLD 25
#define NEAR 30 //cm
#define MIC SENSOR_2
#define RIGHT 1 
#define LEFT 0

// Turn to each side
// and check distance

// decided to use mutexes, just to make sure that
//  tasks do not impact each other

mutex MotorMutex_B;

void drive_backward (int duration)
{
	Acquire(MotorMutex_B);
	RotateMotor(OUT_B,25,180);
	Release(MotorMutex_B);
	
	
	if (SensorUS(IN_4)>NEAR)
	{
		Wait(800);
		OnRev(OUT_AC,50);  
		
	}
	
	Acquire(MotorMutex_B);
	RotateMotor(OUT_B,25,-180);
	Release(MotorMutex_B);
	
	Wait(duration);
	
}
int check_sides()
{
    int left_signal;
    int right_signal;
    
    Wait(1000);
	Acquire(MotorMutex_B);
	
    RotateMotor(OUT_B,25,90);
    left_signal=SensorUS(S4);
    Wait(1000);
    RotateMotor(OUT_B,25,-180);
    right_signal=SensorUS(S4);
    Wait(1000);
    RotateMotor(OUT_B,25,90);
	
	Release(MotorMutex_B);
    Wait(1000);
	

    if (left_signal > right_signal)
    {
        return LEFT;
    }
    else
    {
		return RIGHT;
    }
    
    
}


task main(){
    //    SetSensorLight(IN_3);
    SetSensorLowspeed(IN_4);
    
    //    RotateMotor(OUT_A,75,60);
    //    Off(OUT_A);
    //    RotateMotor(OUT_A,75,-60);
    //    Off(OUT_A);
    while(true){
        
	
        OnFwd(OUT_AC,50);
        while(SensorUS(S4)>NEAR);
        Off(OUT_AC);
		
       
        if (check_sides()==RIGHT)
        {
            OnFwd(OUT_A,50);
            OnRev(OUT_C,50);
            
        } 
        else
        {
            OnFwd(OUT_C,50);
            OnRev(OUT_A,50);
            
        }
        
        Wait(500);
        
        Off(OUT_AC);
        Wait(2000);
    }
}

